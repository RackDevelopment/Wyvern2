#!/usr/bin/env bash

# get scripts base regardless of execution location
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
scriptsBase="$(dirname "$SOURCE")"
. "$scriptsBase/init"

function applyPatches {
    local target="$1"
    local patch_folder="$2"

    echo ""

    git config commit.gpgsign false

    # Apply patch and debugging if the patches is applied cleanly or not.
    echo "  Applying patches to $target... This can take a long time."
    echo ""

    # apply patches from patch_folder to target using the patch bash command. Needs to do every .patch file in the directory

    for patch in "$patchDir/$patch_folder"/*.patch; do
        echo "  Applying patch $patch"
        patch -f -p1 < "$patch"
    done



    if [ "$?" != "0" ]; then
        echo ""
        echo "       Something did not apply cleanly to $target."
        echo "  Please review above details to find a way to resolve that"
    else
        echo ""
        echo "  Patches applied cleanly to $target"
    fi
}

(

    cd "$basedir"
    echo ""
    echo "Applying patches to Minecraft... "

    applyPatches "${NAME}-Server" "server"
    applyPatches "${NAME}-API" "api"
    enableCommitSigning

) || (

    echo "Failed to apply patches"
    enableCommitSigning
    exit 1

) || exit 1