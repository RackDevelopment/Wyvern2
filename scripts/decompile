#!/usr/bin/env bash

# get scripts base regardless of execution location
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
scriptsBase="$(dirname "$SOURCE")"
. "$scriptsBase/init"

extractClassOutput="$fernflower/classes"
srcOutput="$fernflower/minecraft/src/main/"
classOutput="$srcOutput/java"
resourcesOutput="$srcOutput/resources"

jar="$fernflower/Server-${VERSION}.jar"
decompiler="$fernflower/build/libs/fernflower.jar"

(

    mkdir -p "$extractClassOutput"
    mkdir -p "$classOutput"
    mkdir -p "$resourcesOutput"


    echo ""
    echo "Extracting NMS classes..."
      delete "$extractClassOutput" "mkdir"
      cd "$extractClassOutput"

      jar xf "$jar" net/minecraft com/mojang/math

      if [ "$?" != "0" ]; then
        cd "$basedir"
        echo "  Failed to extract NMS classes."
        exit 1
      fi

    echo "  Extracting assets and data..."
      delete "$resourcesOutput" "mkdir"
      cd "$resourcesOutput"

      jar xf "$jar" data assets log4j2.xml Log4j-levels.xsd pack.mcmeta version.json

      if [ "$?" != "0" ]; then
        cd "$basedir"
        echo "  Failed to extract assets and data."
        exit 1
      fi

    echo "  Decompiling classes..."
    echo ""

      git submodule update --recursive -f

      cd "$fernflower"
      pwd
      ./gradlew build

      java -jar "$decompiler" -dgs=1 -hdc=0 -asc=1 -rsy=1 -aoa=1 --legacy-saving -jvn=1 -ind='    ' "$extractClassOutput" "$classOutput"

      if [ "$?" != "0" ]; then
        cd "$basedir"
        echo "  Failed to decompile classes."
        exit 1
      fi

)
